{"version":3,"file":"ng-circle-progress.component.d.ts","sources":["ng-circle-progress.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnChanges, OnInit, OnDestroy, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nexport interface CircleProgressOptionsInterface {\r\n    class?: string;\r\n    backgroundGradient?: boolean;\r\n    backgroundColor?: string;\r\n    backgroundGradientStopColor?: string;\r\n    backgroundOpacity?: number;\r\n    backgroundStroke?: string;\r\n    backgroundStrokeWidth?: number;\r\n    backgroundPadding?: number;\r\n    percent?: number;\r\n    radius?: number;\r\n    space?: number;\r\n    toFixed?: number;\r\n    maxPercent?: number;\r\n    renderOnClick?: boolean;\r\n    units?: string;\r\n    unitsFontSize?: string;\r\n    unitsFontWeight?: string;\r\n    unitsColor?: string;\r\n    outerStrokeGradient?: boolean;\r\n    outerStrokeWidth?: number;\r\n    outerStrokeColor?: string;\r\n    outerStrokeGradientStopColor?: string;\r\n    outerStrokeLinecap?: string;\r\n    innerStrokeColor?: string;\r\n    innerStrokeWidth?: number;\r\n    titleFormat?: Function;\r\n    title?: string | Array<String>;\r\n    titleColor?: string;\r\n    titleFontSize?: string;\r\n    titleFontWeight?: string;\r\n    subtitleFormat?: Function;\r\n    subtitle?: string | Array<String>;\r\n    subtitleColor?: string;\r\n    subtitleFontSize?: string;\r\n    subtitleFontWeight?: string;\r\n    imageSrc?: string;\r\n    imageHeight?: number;\r\n    imageWidth?: number;\r\n    animation?: boolean;\r\n    animateTitle?: boolean;\r\n    animateSubtitle?: boolean;\r\n    animationDuration?: number;\r\n    showTitle?: boolean;\r\n    showSubtitle?: boolean;\r\n    showUnits?: boolean;\r\n    showImage?: boolean;\r\n    showBackground?: boolean;\r\n    showInnerStroke?: boolean;\r\n    clockwise?: boolean;\r\n    responsive?: boolean;\r\n    startFromZero?: boolean;\r\n    showZeroOuterStroke?: boolean;\r\n    lazy?: boolean;\r\n}\r\nexport declare class CircleProgressOptions implements CircleProgressOptionsInterface {\r\n    class: string;\r\n    backgroundGradient: boolean;\r\n    backgroundColor: string;\r\n    backgroundGradientStopColor: string;\r\n    backgroundOpacity: number;\r\n    backgroundStroke: string;\r\n    backgroundStrokeWidth: number;\r\n    backgroundPadding: number;\r\n    percent: number;\r\n    radius: number;\r\n    space: number;\r\n    toFixed: number;\r\n    maxPercent: number;\r\n    renderOnClick: boolean;\r\n    units: string;\r\n    unitsFontSize: string;\r\n    unitsFontWeight: string;\r\n    unitsColor: string;\r\n    outerStrokeGradient: boolean;\r\n    outerStrokeWidth: number;\r\n    outerStrokeColor: string;\r\n    outerStrokeGradientStopColor: string;\r\n    outerStrokeLinecap: string;\r\n    innerStrokeColor: string;\r\n    innerStrokeWidth: number;\r\n    titleFormat: any;\r\n    title: string | Array<String>;\r\n    titleColor: string;\r\n    titleFontSize: string;\r\n    titleFontWeight: string;\r\n    subtitleFormat: any;\r\n    subtitle: string | Array<String>;\r\n    subtitleColor: string;\r\n    subtitleFontSize: string;\r\n    subtitleFontWeight: string;\r\n    imageSrc: any;\r\n    imageHeight: any;\r\n    imageWidth: any;\r\n    animation: boolean;\r\n    animateTitle: boolean;\r\n    animateSubtitle: boolean;\r\n    animationDuration: number;\r\n    showTitle: boolean;\r\n    showSubtitle: boolean;\r\n    showUnits: boolean;\r\n    showImage: boolean;\r\n    showBackground: boolean;\r\n    showInnerStroke: boolean;\r\n    clockwise: boolean;\r\n    responsive: boolean;\r\n    startFromZero: boolean;\r\n    showZeroOuterStroke: boolean;\r\n    lazy: boolean;\r\n}\r\n/** @dynamic Prevent compiling error when using type `Document` https://github.com/angular/angular/issues/20351 */\r\nexport declare class CircleProgressComponent implements OnChanges, OnInit, OnDestroy {\r\n    private elRef;\r\n    private document;\r\n    onClick: EventEmitter<any>;\r\n    name: string;\r\n    class: string;\r\n    backgroundGradient: boolean;\r\n    backgroundColor: string;\r\n    backgroundGradientStopColor: String;\r\n    backgroundOpacity: number;\r\n    backgroundStroke: string;\r\n    backgroundStrokeWidth: number;\r\n    backgroundPadding: number;\r\n    radius: number;\r\n    space: number;\r\n    percent: number;\r\n    toFixed: number;\r\n    maxPercent: number;\r\n    renderOnClick: boolean;\r\n    units: string;\r\n    unitsFontSize: string;\r\n    unitsFontWeight: string;\r\n    unitsColor: string;\r\n    outerStrokeGradient: boolean;\r\n    outerStrokeWidth: number;\r\n    outerStrokeColor: string;\r\n    outerStrokeGradientStopColor: String;\r\n    outerStrokeLinecap: string;\r\n    innerStrokeColor: string;\r\n    innerStrokeWidth: string | number;\r\n    titleFormat: Function;\r\n    title: string | Array<String>;\r\n    titleColor: string;\r\n    titleFontSize: string;\r\n    titleFontWeight: string;\r\n    subtitleFormat: Function;\r\n    subtitle: string | string[];\r\n    subtitleColor: string;\r\n    subtitleFontSize: string;\r\n    subtitleFontWeight: string;\r\n    imageSrc: string;\r\n    imageHeight: number;\r\n    imageWidth: number;\r\n    animation: boolean;\r\n    animateTitle: boolean;\r\n    animateSubtitle: boolean;\r\n    animationDuration: number;\r\n    showTitle: boolean;\r\n    showSubtitle: boolean;\r\n    showUnits: boolean;\r\n    showImage: boolean;\r\n    showBackground: boolean;\r\n    showInnerStroke: boolean;\r\n    clockwise: boolean;\r\n    responsive: boolean;\r\n    startFromZero: boolean;\r\n    showZeroOuterStroke: boolean;\r\n    lazy: boolean;\r\n    templateOptions: CircleProgressOptions;\r\n    svgElement: HTMLElement;\r\n    isInViewport: Boolean;\r\n    onViewportChanged: EventEmitter<{\r\n        oldValue: Boolean;\r\n        newValue: Boolean;\r\n    }>;\r\n    window: Window;\r\n    _viewportChangedSubscriber: Subscription;\r\n    svg: any;\r\n    options: CircleProgressOptions;\r\n    defaultOptions: CircleProgressOptions;\r\n    _lastPercent: number;\r\n    _gradientUUID: string;\r\n    render: () => void;\r\n    polarToCartesian: (centerX: number, centerY: number, radius: number, angleInDegrees: number) => {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    draw: (percent: number) => void;\r\n    getAnimationParameters: (previousPercent: number, currentPercent: number) => {\r\n        times: number;\r\n        step: number;\r\n        interval: number;\r\n    };\r\n    animate: (previousPercent: number, currentPercent: number) => void;\r\n    emitClickEvent: (event: any) => void;\r\n    private _timerSubscription;\r\n    private applyOptions;\r\n    private getRelativeY;\r\n    private min;\r\n    private max;\r\n    private uuid;\r\n    isDrawing(): boolean;\r\n    findSvgElement: () => void;\r\n    private isElementInViewport;\r\n    checkViewport: () => void;\r\n    onScroll: (event: Event) => void;\r\n    loadEventsForLazyMode: () => void;\r\n    unloadEventsForLazyMode: () => void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    constructor(defaultOptions: CircleProgressOptions, elRef: ElementRef, document: any);\r\n}\r\n"]}